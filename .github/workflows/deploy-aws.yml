name: Deploy to AWS App Runner

on:
  push:
    branches: [main]
    paths:
      - 'server.js'
      - 'package*.json'
      - 'Dockerfile'
      - 'public/**'
      - '.github/workflows/deploy-aws.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::175431680077:role/GitHubActionsAppRunnerRole
          aws-region: us-east-1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            public.ecr.aws/z6l6u0w0/hello-devcontainer-aws:latest
            public.ecr.aws/z6l6u0w0/hello-devcontainer-aws:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Deploy to App Runner
        run: |
          # Check if service exists
          if aws apprunner describe-service --service-arn $(aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='hello-devcontainer-aws'].ServiceArn" --output text) 2>/dev/null; then
            echo "Service exists, updating..."
            aws apprunner start-deployment --service-arn $(aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='hello-devcontainer-aws'].ServiceArn" --output text)
          else
            echo "Creating new service..."
            aws apprunner create-service \
              --service-name hello-devcontainer-aws \
              --source-configuration '{
                "ImageRepository": {
                  "ImageIdentifier": "public.ecr.aws/z6l6u0w0/hello-devcontainer-aws:latest",
                  "ImageConfiguration": {
                    "Port": "8080"
                  },
                  "ImageRepositoryType": "ECR_PUBLIC"
                },
                "AutoDeploymentsEnabled": false
              }' \
              --instance-configuration '{
                "Cpu": "0.25 vCPU",
                "Memory": "0.5 GB"
              }'
          fi
      
      - name: Get service URL
        run: |
          sleep 30  # Wait for deployment to start
          SERVICE_ARN=$(aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='hello-devcontainer-aws'].ServiceArn" --output text)
          SERVICE_URL=$(aws apprunner describe-service --service-arn $SERVICE_ARN --query "Service.ServiceUrl" --output text)
          echo "ðŸš€ App deployed to: https://$SERVICE_URL"